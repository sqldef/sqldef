name: docker
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
jobs:
  build:
    name: ${{ startsWith(github.ref, 'refs/tags/') && 'push' || 'build' }} (${{ matrix.cmd }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmd: [mysqldef, sqlite3def, mssqldef, psqldef]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: sqldef
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: sqldef/${{ matrix.cmd }}
          tags: |
              type=ref,event=branch
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}

      - name: ${{ startsWith(github.ref, 'refs/tags/') && 'Push' || 'Build' }} Docker image
        id: push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: SQLDEF_TOOL=${{ matrix.cmd }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/sqldef/${{ matrix.cmd }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
