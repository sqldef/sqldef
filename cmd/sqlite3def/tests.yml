CreateTable:
  desired: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
DropTable:
  current: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
    CREATE TABLE bigdata (
      data integer
    );
  desired: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
  output: |
    DROP TABLE `bigdata`;
CreateTableQuotes:
  current: |
    CREATE TABLE "test_table" (
      id integer primary key
    );
  desired: |
    CREATE TABLE `test_table` (
      id integer primary key
    );
  output: ''
CreateTableWithAutoincrement:
  desired: |
    CREATE TABLE users (
      id integer PRIMARY KEY AUTOINCREMENT,
      name text,
      age integer
    );
CreateView:
  current: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
  desired: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
    CREATE VIEW `view_users` AS select id from users where age = 1;
  output: |
    CREATE VIEW `view_users` AS select id from users where age = 1;
DropAndCreateView:
  current: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
    CREATE VIEW `view_users` AS select id from users where age = 1;
  desired: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
    CREATE VIEW `view_users` AS select id from users where age = 2;
  output: |
    DROP VIEW `view_users`;
    CREATE VIEW `view_users` AS select id from users where age = 2;
ColumnLiteral:
  desired: |
    CREATE TABLE users (
      id integer NOT NULL,
      name text,
      age integer
    );
DataTypes:
  # Remaining SQL spec: bit varying, interval, numeric, decimal, real,
  # smallint, smallserial, xml
  desired: |
    CREATE TABLE users (
      c_timestamp timestamp,
      c_integer integer,
      c_text text
    );
BlobType:
  desired: |
    CREATE TABLE bigdata (
      data
    );
SingleQuotedID:
  desired: |
    CREATE TABLE 'bigdata' (
      'data' integer
    );
Index:
  desired: |
    CREATE TABLE bigdata (
      -- unique constraint generates an index entry automatically in sqlite_master table
      path text UNIQUE,
      data integer
    );
    CREATE INDEX index_bigdata ON bigdata(data);
TableOptions:
  desired: |
    CREATE TABLE bigdata(
      id integer PRIMARY KEY,
      data text
    ) STRICT, WITHOUT ROWID;
ForeignKeyConstraint:
  desired: |
    CREATE TABLE artist(
      artistid    INTEGER PRIMARY KEY,
      artistname  TEXT
    );
    CREATE TABLE track(
      trackid     INTEGER,
      trackname   TEXT,
      trackartist INTEGER REFERENCES artist(artistid)
    );
IndependentConstraintDefinition:
  desired: |
    CREATE TABLE artist(
      artistid    INTEGER,
      artistname  TEXT,
      PRIMARY KEY(artistid)
    );
    CREATE TABLE track(
      trackid     INTEGER,
      trackname   TEXT,
      trackartist INTEGER,
      CHECK (trackid > 0),
      FOREIGN KEY(trackartist) REFERENCES artist(artistid)
    );
