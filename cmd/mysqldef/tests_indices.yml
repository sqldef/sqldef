CreateTableUniqueIndex:
  desired: |
    CREATE TABLE items (
      id int NOT NULL,
      created DATE NOT NULL,
      UNIQUE INDEX(id, created)
    );
CreateTableAddIndexWithKeyLength:
  current: |
    CREATE TABLE users (
      id bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
      name TEXT NOT NULL,
      PRIMARY KEY (id)
    );
  desired: |
    CREATE TABLE users (
      id bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
      name TEXT NOT NULL,
      PRIMARY KEY (id),
      INDEX index_name(name(255))
    );
  output: |
    ALTER TABLE `users` ADD INDEX `index_name` (`name`(255));
AddIndex:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    ALTER TABLE `users` ADD UNIQUE INDEX `index_name`(`name`);
  output: |
    ALTER TABLE `users` ADD UNIQUE INDEX `index_name`(`name`);
ChangeIndexColumns:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    ALTER TABLE `users` ADD UNIQUE INDEX `index_name`(`name`);
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    ALTER TABLE `users` ADD INDEX `index_name`(`name`, `created_at`);
  output: |
    ALTER TABLE `users` DROP INDEX `index_name`;
    ALTER TABLE `users` ADD INDEX `index_name`(`name`, `created_at`);
AddIndexWithKeyLength:
  current: |
    CREATE TABLE users (
      id bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
      name TEXT NOT NULL,
      PRIMARY KEY (id)
    );
  desired: |
    CREATE TABLE users (
      id bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
      name TEXT NOT NULL,
      PRIMARY KEY (id)
    );
    ALTER TABLE `users` ADD INDEX `index_name`(`name`(255));
  output: |
    ALTER TABLE `users` ADD INDEX `index_name`(`name`(255));
IndexOption:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id) USING BTREE
    );
  output: |
    ALTER TABLE `users` ADD KEY `index_id` (`id`) using BTREE;
IndexOptionCaseInsensitive:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id) USING BTREE
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id) using btree
    );
  output: ""
IndexOptionNoUsing:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id) USING BTREE
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id)
    );
  output: ""
IndexOptionAddWithoutUsing:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id)
    );
  output: |
    ALTER TABLE `users` ADD KEY `index_id` (`id`);
IndexOptionAddWithoutUsingThenWith:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id)
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      KEY index_id (id) USING BTREE
    );
  output: ""
MultipleColumnIndexesOption:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type) USING BTREE
    );
  output: |
    ALTER TABLE `users` ADD INDEX `index_id` (`registered_at`, `role_type`) using BTREE;
MultipleColumnIndexesOptionCaseInsensitive:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type) USING BTREE
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type) using btree
    );
  output: ""
MultipleColumnIndexesOptionNoUsing:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type) USING BTREE
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type)
    );
  output: ""
MultipleColumnIndexesOptionAddWithoutUsing:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type)
    );
  output: |
    ALTER TABLE `users` ADD INDEX `index_id` (`registered_at`, `role_type`);
MultipleColumnIndexesOptionAddWithoutUsingThenWith:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type)
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type) USING BTREE
    );
  output: ""
MultipleColumnIndexesOptionAddWithoutUsingThenCaseInsensitive:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type)
    );
  desired: |
    CREATE TABLE users (
      id int(11) NOT NULL,
      registered_at datetime(6) NOT NULL,
      role_type int(1) NOT NULL,
      INDEX index_id (registered_at, role_type) using btree
    );
  output: ""
FulltextIndex:
  desired: |
    CREATE TABLE posts (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      title varchar(40) DEFAULT NULL,
      FULLTEXT KEY title_fulltext_index (title) /*!50100 WITH PARSER ngram */
    );
  output: |
    CREATE TABLE posts (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      title varchar(40) DEFAULT NULL,
      FULLTEXT KEY title_fulltext_index (title) /*!50100 WITH PARSER ngram */
    );
FulltextIndexDrop:
  current: |
    CREATE TABLE posts (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      title varchar(40) DEFAULT NULL,
      FULLTEXT KEY title_fulltext_index (title) /*!50100 WITH PARSER ngram */
    );
  desired: |
    CREATE TABLE posts (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      title varchar(40) DEFAULT NULL
    );
  output: |
    ALTER TABLE `posts` DROP INDEX `title_fulltext_index`;
FulltextIndexReAdd:
  current: |
    CREATE TABLE posts (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      title varchar(40) DEFAULT NULL
    );
  desired: |
    CREATE TABLE posts (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      title varchar(40) DEFAULT NULL,
      FULLTEXT KEY title_fulltext_index (title) /*!50100 WITH PARSER ngram */
    );
  output: |
    ALTER TABLE `posts` ADD FULLTEXT KEY `title_fulltext_index` (`title`) WITH parser ngram;
CreateIndex:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    CREATE INDEX index_name ON users (name);
    CREATE UNIQUE INDEX index_created_at ON users (created_at);
  output: |
    CREATE INDEX index_name ON users (name);
    CREATE UNIQUE INDEX index_created_at ON users (created_at);
CreateIndexDrop:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    CREATE INDEX index_name ON users (name);
    CREATE UNIQUE INDEX index_created_at ON users (created_at);
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
  output: |
    ALTER TABLE `users` DROP INDEX `index_created_at`;
    ALTER TABLE `users` DROP INDEX `index_name`;
