CreateTable:
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    CREATE TABLE bigdata (
      data bigint
    );
DropTable:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
    CREATE TABLE bigdata (
      data bigint
    );
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
  output: |
    DROP TABLE `bigdata`;
CreateTableWithImplicitNotNull:
  desired: |
    CREATE TABLE users (
      id bigint PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
CreateTableDropPrimaryKey:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL PRIMARY KEY,
      name varchar(20)
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name varchar(20)
    );
  output: |
    ALTER TABLE `users` DROP PRIMARY KEY;
CreateTableAddPrimaryKeyInColumn:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name varchar(20)
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name varchar(20) PRIMARY KEY
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `name` `name` varchar(20) NOT NULL;
    ALTER TABLE `users` ADD PRIMARY KEY (`name`);
CreateTableAddPrimaryKey:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name varchar(20)
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name varchar(20),
      PRIMARY KEY (id)
    );
  output: |
    ALTER TABLE `users` ADD PRIMARY KEY (`id`);
CreateTableAddAutoIncrement:
  current: |
    CREATE TABLE users (
      id bigint(20) NOT NULL PRIMARY KEY,
      name varchar(20)
    );
  desired: |
    CREATE TABLE users (
      id bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(20)
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `id` `id` bigint(20) NOT NULL AUTO_INCREMENT;
AlterTableAddSetTypeColumn:
  current: |
    CREATE TABLE alarm (id BIGINT PRIMARY KEY);
  desired: |
    CREATE TABLE alarm (
      id BIGINT PRIMARY KEY,
      dayOfWeek SET('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') NOT NULL
    );
  output: |
    ALTER TABLE `alarm` ADD COLUMN `dayOfWeek` set('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') NOT NULL AFTER `id`;
CreateTableWithKeyBlockSize:
  desired: |
    CREATE TABLE users (
      id BIGINT
    ) KEY_BLOCK_SIZE=8;
AlterTableColumnFractionalSecondsPart:
  current: |
    CREATE TABLE users (
      id bigint(20) PRIMARY KEY,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id bigint(20) PRIMARY KEY,
      created_at datetime(3) NOT NULL
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `created_at` `created_at` datetime(3) NOT NULL;
TableComment:
  current: |
    CREATE TABLE `prefecture` (
      `id` int(11) unsigned NOT NULL COMMENT 'ID',
      `name` varchar(50) NOT NULL COMMENT '都道府県名',
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
  desired: |
    CREATE TABLE `prefecture` (
      `id` int(11) unsigned NOT NULL COMMENT 'ID',
      `name` varchar(50) NOT NULL COMMENT '都道府県名',
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='都道府県マスター';
  output: |
    ALTER TABLE `prefecture` COMMENT = '都道府県マスター';
RemoveTableComment:
  current: |
    CREATE TABLE `prefecture` (
      `id` int(11) unsigned NOT NULL COMMENT 'ID',
      `name` varchar(50) NOT NULL COMMENT '都道府県名',
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='都道府県マスター';
  desired: |
    CREATE TABLE `prefecture` (
      `id` int(11) unsigned NOT NULL COMMENT 'ID',
      `name` varchar(50) NOT NULL COMMENT '都道府県名',
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
  output: |
    ALTER TABLE `prefecture` COMMENT = '';
CreateTableChangePrimaryKey:
  current: |
    CREATE TABLE friends (
      user_id bigint NOT NULL PRIMARY KEY,
      friend_id bigint NOT NULL,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE friends (
      user_id bigint NOT NULL,
      friend_id bigint NOT NULL,
      created_at datetime NOT NULL,
      PRIMARY KEY (user_id, friend_id)
    );
  output: |
    ALTER TABLE `friends` DROP PRIMARY KEY;
    ALTER TABLE `friends` ADD PRIMARY KEY (`user_id`, `friend_id`);
CreateTableChangePrimaryKeyWithComment:
  current: |
    CREATE TABLE friends (
      user_id bigint NOT NULL PRIMARY KEY,
      friend_id bigint NOT NULL,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE friends (
      user_id bigint NOT NULL,
      friend_id bigint NOT NULL,
      created_at datetime NOT NULL,
      PRIMARY KEY (user_id, friend_id) COMMENT 'new primary key'
    );
  output: |
    ALTER TABLE `friends` DROP PRIMARY KEY;
    ALTER TABLE `friends` ADD PRIMARY KEY (`user_id`, `friend_id`) COMMENT 'new primary key';
CreateTableAddAutoIncrementPrimaryKey:
  current: |
    CREATE TABLE users (
      name varchar(20)
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL AUTO_INCREMENT,
      name varchar(20),
      PRIMARY KEY (id)
    );
  output: |
    ALTER TABLE `users` ADD COLUMN `id` bigint NOT NULL FIRST;
    ALTER TABLE `users` ADD PRIMARY KEY (`id`);
    ALTER TABLE `users` CHANGE COLUMN `id` `id` bigint NOT NULL AUTO_INCREMENT;
CreateTableKeepAutoIncrement:
  current: |
    CREATE TABLE users (
      id int(11) NOT NULL AUTO_INCREMENT,
      password char(128) COLLATE utf8mb4_bin DEFAULT NULL,
      PRIMARY KEY (id)
    );
  desired: |
    CREATE TABLE users (
      id BIGINT NOT NULL AUTO_INCREMENT,
      password char(128) COLLATE utf8mb4_bin DEFAULT NULL,
      PRIMARY KEY (id)
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `id` `id` bigint NOT NULL AUTO_INCREMENT;
AddColumn:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL
    );
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
  output: |
    ALTER TABLE `users` ADD COLUMN `created_at` datetime NOT NULL AFTER `name`;
DropColumn:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      created_at datetime NOT NULL
    );
  output: |
    ALTER TABLE `users` DROP COLUMN `name`;
AddColumnAfter:
  current: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      created_at datetime NOT NULL
    );
  desired: |
    CREATE TABLE users (
      id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name varchar(40) NOT NULL,
      created_at datetime NOT NULL
    );
  output: |
    ALTER TABLE `users` ADD COLUMN `name` varchar(40) NOT NULL AFTER `id`;
AddColumnWithNull:
  current: |
    CREATE TABLE users (
      id bigint PRIMARY KEY,
      name varchar(40) DEFAULT NULL
    );
  desired: |
    CREATE TABLE users (
      id bigint PRIMARY KEY,
      name varchar(40) DEFAULT NULL,
      created_at timestamp NULL DEFAULT NULL
    );
  output: |
    ALTER TABLE `users` ADD COLUMN `created_at` timestamp NULL DEFAULT null AFTER `name`;
ChangeColumn:
  current: |
    CREATE TABLE users (
      id int UNSIGNED NOT NULL,
      name varchar(40)
    );
  desired: |
    CREATE TABLE users (
      id bigint UNSIGNED NOT NULL,
      name char(40)
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `id` `id` bigint UNSIGNED NOT NULL;
    ALTER TABLE `users` CHANGE COLUMN `name` `name` char(40);
ChangeColumnLength:
  current: |
    CREATE TABLE users (
      id int UNSIGNED NOT NULL,
      name varchar(255) COLLATE utf8mb4_bin DEFAULT NULL
    );
  desired: |
    CREATE TABLE users (
      id int UNSIGNED NOT NULL,
      name varchar(1000) COLLATE utf8mb4_bin DEFAULT NULL
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `name` `name` varchar(1000) COLLATE utf8mb4_bin DEFAULT null;
ChangeColumnBinary:
  current: |
    CREATE TABLE users (
      word varchar(64) NOT NULL
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
  desired: |
    CREATE TABLE users (
      word varchar(64) BINARY NOT NULL
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
  output: |
    ALTER TABLE `users` CHANGE COLUMN `word` `word` varchar(64) COLLATE utf8mb4_bin NOT NULL;
ChangeColumnCollate:
  current: |
    CREATE TABLE users (
      password char(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin
    );
  desired: |
    CREATE TABLE users (
      password char(128) CHARACTER SET latin1 COLLATE latin1_bin
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `password` `password` char(128) CHARACTER SET latin1 COLLATE latin1_bin;
ChangeEnumColumn:
  current: |
    CREATE TABLE users (
      active enum("active")
    );
  desired: |
    CREATE TABLE users (
      active enum("active", "inactive")
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `active` `active` enum('active', 'inactive');
ChangeComment:
  current: |
    CREATE TABLE users (
      created_at datetime COMMENT 'created at'
    );
  desired: |
    CREATE TABLE users (
      created_at datetime COMMENT 'created time'
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `created_at` `created_at` datetime COMMENT 'created time';
SwapColumn:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name varchar(40) NOT NULL,
      nickname varchar(20) NOT NULL,
      created_at datetime NOT NULL,
      PRIMARY KEY (id)
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      nickname varchar(20) NOT NULL,
      name varchar(40) NOT NULL,
      created_at datetime NOT NULL,
      PRIMARY KEY (id)
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `nickname` `nickname` varchar(20) NOT NULL AFTER `id`;

RenameColumn:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      username text,
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      user_name text, -- @rename from=username
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `username` `user_name` text;

RenameColumnWithTypeChange:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      username varchar(100),
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      user_name text NOT NULL, -- @rename from=username
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `username` `user_name` text NOT NULL;

RenameColumnIdempotency:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      user_name text,
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      user_name text, -- @rename from=username
      age integer
    );
  output: ""

RenameColumnConflictingNames:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      username text,
      user_name varchar(50),
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      username text,
      user_name varchar(100), -- @rename from=username
      age integer
    );
  error: "cannot rename column 'username' to 'user_name' - column 'username' still exists"

RenameColumnQuotedDoubleQuotes:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      `foo bar` text,
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      foobar text, -- @rename from="foo bar"
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `foo bar` `foobar` text;

RenameColumnWithSpecialChars:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      `column-with-dash` varchar(50),
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      column_with_underscore varchar(50), -- @rename from="column-with-dash"
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `column-with-dash` `column_with_underscore` varchar(50);

RenameColumnWithDot:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      `special.column` text NOT NULL,
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      special_column text NOT NULL, -- @rename from="special.column"
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `special.column` `special_column` text NOT NULL;

RenameColumnWithCStyleComment:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      username varchar(100),
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      user_name varchar(100), /* @rename from=username */
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `username` `user_name` varchar(100);

RenameMultipleColumns:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      `user name` text,
      `email@address` varchar(100),
      age integer
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      username text, -- @rename from="user name"
      email_address varchar(100), -- @rename from="email@address"
      age integer
    );
  output: |
    ALTER TABLE `users` CHANGE COLUMN `user name` `username` text;
    ALTER TABLE `users` CHANGE COLUMN `email@address` `email_address` varchar(100);

RenameTable:
  current: |
    CREATE TABLE user_accounts (
      id bigint NOT NULL,
      username text,
      age integer
    );
  desired: |
    CREATE TABLE users ( -- @rename from=user_accounts
      id bigint NOT NULL,
      username text,
      age integer
    );
  output: |
    ALTER TABLE `user_accounts` RENAME TO `users`;

RenameTableWithCommentVariant:
  current: |
    CREATE TABLE old_users (
      id bigint NOT NULL,
      name text
    );
  desired: |
    CREATE TABLE new_users /* @rename from=old_users */ (
      id bigint NOT NULL,
      name text
    );
  output: |
    ALTER TABLE `old_users` RENAME TO `new_users`;

RenameTableWithQuotedName:
  current: |
    CREATE TABLE `user accounts` (
      id bigint NOT NULL,
      name text
    );
  desired: |
    CREATE TABLE `user_profiles` ( -- @rename from="user accounts"
      id bigint NOT NULL,
      name text
    );
  output: |
    ALTER TABLE `user accounts` RENAME TO `user_profiles`;

RenameTableAndMultipleColumnChanges:
  current: |
    CREATE TABLE old_accounts (
      id bigint NOT NULL,
      user_name varchar(50),
      is_active boolean,
      old_field text
    );
  desired: |
    CREATE TABLE accounts ( -- @rename from=old_accounts
      id bigint NOT NULL AUTO_INCREMENT PRIMARY KEY,
      username varchar(100), -- @rename from=user_name
      is_active boolean DEFAULT true,
      created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
    );
  output: |
    ALTER TABLE `old_accounts` RENAME TO `accounts`;
    ALTER TABLE `accounts` CHANGE COLUMN `user_name` `username` varchar(100);
    ALTER TABLE `accounts` CHANGE COLUMN `is_active` `is_active` boolean DEFAULT true;
    ALTER TABLE `accounts` ADD COLUMN `created_at` timestamp NOT NULL DEFAULT current_timestamp AFTER `is_active`;
    ALTER TABLE `accounts` ADD PRIMARY KEY (`id`);
    ALTER TABLE `accounts` CHANGE COLUMN `id` `id` bigint NOT NULL AUTO_INCREMENT;
    ALTER TABLE `accounts` DROP COLUMN `old_field`;
