CreateTable:
  desired: |
    CREATE TABLE bigdata (
      data bigint
    );
DropTable:
  current: |
    CREATE TABLE bigdata (
      data bigint
    );
  output: |
    DROP TABLE [dbo].[bigdata];
TestMssqldefColumnLiteral:
  desired: |
    CREATE TABLE v (
      v_integer integer NOT NULL,
      v_text text,
      v_smallmoney smallmoney,
      v_money money,
      v_datetimeoffset datetimeoffset(1),
      v_datetime2 datetime2,
      v_datetime2_with_precision datetime2(3),
      v_smalldatetime smalldatetime,
      v_nchar nchar(30),
      v_nvarchar nvarchar(30),
      v_nvarchar_max nvarchar(max),
      v_varchar_max varchar(max),
      v_varbinary_max varbinary(max),
      v_ntext ntext
    );
TestMssqldefMultipleIndex:
  desired: |
    CREATE TABLE v (
      v_integer integer NOT NULL,
      v_nchar nchar(30)
    );
    CREATE NONCLUSTERED INDEX idx1_v ON v (v_integer);
    CREATE NONCLUSTERED INDEX idx2_v ON v (v_nchar);
CreateIndexWithFilter:
  desired: |
    CREATE TABLE v (
      v_int int
    );
    CREATE INDEX idx_v ON v (v_int) WHERE (v_int IS NOT NULL);
IndexesOnChangedFilter:
  current: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
    CREATE INDEX idx_v ON v (v_int, v_nvarchar) WHERE (v_int IS NOT NULL);
  desired: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
    CREATE INDEX idx_v ON v (v_int, v_nvarchar) WHERE (v_int IS NOT NULL AND v_nvarchar IS NOT NULL);
  output: |
    DROP INDEX [idx_v] ON [dbo].[v];
    CREATE INDEX idx_v ON v (v_int, v_nvarchar) WHERE (v_int IS NOT NULL AND v_nvarchar IS NOT NULL);

CreateColumnStoreIndex:
  current: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
  desired: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
    CREATE NONCLUSTERED COLUMNSTORE INDEX idx_v ON v (v_int, v_nvarchar);
  output: |
    CREATE NONCLUSTERED COLUMNSTORE INDEX idx_v ON v (v_int, v_nvarchar);
CreateColumnStoreIndexWithoutKeyword:
  current:
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
  desired: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
    CREATE COLUMNSTORE INDEX idx_v ON v (v_int, v_nvarchar);
  output: |
    CREATE COLUMNSTORE INDEX idx_v ON v (v_int, v_nvarchar);
DropColumnStoreIndex:
  current: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
    CREATE NONCLUSTERED COLUMNSTORE INDEX idx_v ON v (v_int, v_nvarchar);
  desired: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
  output: |
    DROP INDEX [idx_v] ON [dbo].[v];
    
DropTableOnNonDefaultSchema:
  current: |
    CREATE TABLE FOO.bigdata1 (
      data bigint
    );
    CREATE TABLE FOO.bigdata2 (
      data bigint
    );
  desired: |
    CREATE TABLE FOO.bigdata1 (
      data bigint
    );
  output: |
    DROP TABLE [FOO].[bigdata2];
    
CreateTableOnNonStandardDefaultSchema:
  desired: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
  user: "mssqldef_user"
DropTableOnNonStandardDefaultSchema:
  current: |
    CREATE TABLE v (
      v_int int,
      v_nvarchar nvarchar(30)
    );
  output: |
    DROP TABLE [FOO].[v];
  user: "mssqldef_user"
MultipleView:
  current: |
    CREATE VIEW v1 AS SELECT 1 AS N;
    CREATE VIEW v2 AS SELECT 2 AS N;
  output: |
    DROP VIEW [dbo].[v1];
    DROP VIEW [dbo].[v2];
UnicodeString:
  desired: |
    CREATE VIEW v AS SELECT Session_Context(N'key') AS x;
InsteadOfTrigger:
  desired: |
    CREATE TABLE users (
      id integer,
      name text,
      age integer,
      CONSTRAINT PK_users PRIMARY KEY CLUSTERED (id)
    );
    CREATE TRIGGER [insert_users] ON [dbo].[users] instead of insert AS
    insert into users(id, name, age) select id + 1, name, age from INSERTED;
ConvertMssqlTypes:
  desired: |
    CREATE VIEW v AS
      SELECT
        Convert(bigint, 0) as v_bigint,
        Convert(bit, 0) as v_bit,
        Convert(int, 2) as v_int,
        Convert(money, 3) as v_money,
        Convert(numeric(9, 3), 4) as v_numeric,
        Convert(smallint, 5) as v_smallint,
        Convert(smallmoney, 6) as v_smallmoney,
        Convert(tinyint, 7) as v_tinyint,
        Convert(float, 8) as v_float,
        Convert(real, 9) as v_real,
        Convert(datetime2(0), '2023-03-11 23:50:00') as v_datetime2,
        Convert(datetimeoffset(0), '2023-03-11 23:50:00+0900') as v_datetimeoffset,
        Convert(smalldatetime, '2023-03-11 23:50') as v_smalldatetime,
        Convert(text, 'Hello, World') as v_text,
        Convert(varchar(20), 'Hello, World') as v_varchar,
        Convert(nchar, N'H') as v_nchar,
        Convert(ntext, N'Hello, World') as v_ntext,
        Convert(nvarchar(20), N'Hello, World') as v_nvarchar,
        Convert(varbinary(20), 123456) as v_varbinary;
SetOptionInTrigger:
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name text
    );
    CREATE TABLE logs (
      id bigint NOT NULL,
      dt datetime
    );
    CREATE TRIGGER [insert_log] ON [dbo].[users] after insert AS
    set nocount on
    insert into logs select id, getdate() from inserted;
IndexColumnOrder:
  current:
    CREATE TABLE v (
      v1 int,
      v2 int,
      CONSTRAINT [v_pk] PRIMARY KEY CLUSTERED ([v2] ASC, [v1] ASC)
    );
  desired:
    CREATE TABLE v (
      v1 int,
      v2 int,
      CONSTRAINT [v_pk] PRIMARY KEY CLUSTERED ([v2] ASC, [v1] ASC)
    );
  output: ""
ReservedWordColumnName:
  current: |
    CREATE TABLE v(
      [V_INT] int,
      [TIMESTAMP] datetime
    );
  desired: |
    CREATE TABLE v(
      [V_INT] int,
      [TIMESTAMP] datetime
    );
  output: ""
ChangePrimaryKey:
  current: |
    CREATE TABLE v (
      v1 int NOT NULL,
      v2 int NOT NULL,
      CONSTRAINT [v_pk] PRIMARY KEY CLUSTERED ([v1])
    )
  desired: |
    CREATE TABLE v (
      v1 int NOT NULL,
      v2 int NOT NULL,
      CONSTRAINT [v_pk] PRIMARY KEY CLUSTERED ([v2])
    )
  output: |
    ALTER TABLE [dbo].[v] DROP CONSTRAINT [v_pk];
    ALTER TABLE [dbo].[v] ADD CONSTRAINT [v_pk] PRIMARY KEY CLUSTERED ([v2]);
CreateViewWithMultiline:
  desired: |
    CREATE VIEW v AS
    SELECT
    10 as N;
PercentConstraintName:
  current: |
    CREATE TABLE [dbo].[percent_test] (
      [test%] int CONSTRAINT [DF_percent_test_test%] DEFAULT (NULL)
    );
  desired: |
    CREATE TABLE [dbo].[percent_test] (
      [test%] int CONSTRAINT [DF_percent_test_test%] DEFAULT (NULL)
    );
  output: ""
